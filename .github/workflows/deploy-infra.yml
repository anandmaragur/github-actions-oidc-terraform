name: Terraform deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  tf_actions_working_dir: infra
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_USE_OIDC: true
  ARM_SKIP_PROVIDER_REGISTRATION: true

permissions:
  id-token: write
  contents: read

jobs:
#  iac-scan:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        files:
#          - ./infra/main.tf
#          - ./infra/output.tf
#          - ./infra/providers.tf
#          - ./infra/variables.tf
#    steps:
#      - uses: actions/checkout@v2
#        name: Checkout
#
#      - name: Run Snyk to check Kubernetes manifest file for issues
#        uses: snyk/actions/iac@master
#        env:
#          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#        with:
#          file: ${{ matrix.files }}
#          args: --report

  terraform-deploy:
#    needs: iac-scan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}
    
    steps:
    - uses: actions/checkout@v2
      name: Checkout

    - name: Log in to Azure using OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      id: init
      run: terraform init

        
    - name: Terraform workspace
      id: workspace
      run: terraform workspace select dev-workspace || terraform workspace new dev-workspace
    

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true


    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan  --out=out.tfplan


    - name: Terraform Apply
      id: apply
      run: terraform destroy -auto-approve

